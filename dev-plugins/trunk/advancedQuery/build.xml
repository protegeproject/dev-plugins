<?xml version = "1.0" encoding = "utf-8"?>
<project name = "Developer Plugins" default = "dist" basedir = ".">    
   <property name = "src" value = "./src"/>  
   <property name = "classes" value = "./classes"/>  
   <property name = "plugins" value = "../plugins"/>
   <property name = "lib" value = "../lib"/>
   <property name = "junit" value = "./junit"/>
   <property name = "plugin_dist" value = "edu.stanford.smi.protege.advancedQuery"/>
   <property name = "pluginName" value = "advancedQueryPlugin"/>
	
   <path id = "project.classpath">    
     <pathelement location = "${lib}/protege.jar"/>
     <pathelement location = "${lib}/protege-owl.jar"/>
     <pathelement location = "./lib/lucene-core-2.0.1-dev.jar"/>
     <pathelement location = "./lib/phonetix-0.2.jar"/>
   </path>

   <target name = "init">
     <mkdir dir = "${classes}"/>
     <mkdir dir = "${plugins}"/>
     <mkdir dir = "${plugins}/${plugin_dist}"/>
   </target>  


   <target name = "compile" depends = "init">    
     <javac srcdir = "${src}" destdir = "${classes}" debug="on">
       <classpath refid = "project.classpath"/>    
     </javac>    
   </target>

   <target name = "jar" depends = "compile">
     <jar jarfile = "${plugins}/${plugin_dist}/${pluginName}.jar" 
          basedir = "${classes}" 
          manifest = "${src}/META-INF/MANIFEST.MF"/>  
     <copy file = "./lib/lucene-core-2.0.1-dev.jar"
           todir = "${plugins}/${plugin_dist}"/>
     <copy file = "./lib/phonetix-0.2.jar"
           todir = "${plugins}/${plugin_dist}"/>
     <copy file = "./plugin.properties"
           todir = "${plugins}/${plugin_dist}"/>
   </target>

   <target name = "dist" depends = "jar">
     <zip basedir = "${plugins}"
          includes = "${plugin_dist}/**"
          destfile = "${plugins}/${pluginName}.zip"/>
   </target>


   <target name = "junit-compile" depends = "compile">    
     <javac srcdir = "${junit}" destdir = "${classes}" debug="on">
       <classpath refid = "project.classpath"/>
       <classpath>
         <pathelement location = "${classes}"/>
       </classpath>       
     </javac>    
   </target>

   <target name = "junit" 
           description = "run the tests (anybody can do it)"
           depends = "dist,junit-compile">
     <property file="junit.properties"/>
     <unzip src = "${plugins}/${pluginName}.zip"
            dest = "${junit.protege.dir}/plugins"
            overwrite="yes"/>
     <junit haltonfailure = "on" 
            printsummary="withOutAndErr"
            dir = ".." fork = "yes">
        <classpath>
           <pathelement location="${classes}"/>
           <pathelement location = "${lib}/protege.jar"/>
           <pathelement location = "./lib/lucene-core-2.0.1-dev.jar"/>
           <pathelement location = "./lib/phonetix-0.2.jar"/>
           <fileset
              dir="${junit.protege.dir}/plugins/edu.stanford.smi.protegex.owl">
              <include name = "**/*.jar"/>
           </fileset>
        </classpath>
        <jvmarg value="-Dprotege.dir=${junit.protege.dir}"/>
        <batchtest>
           <fileset dir="${junit}/src">
             <include name = "**/*Test.java"/>
           </fileset>
        </batchtest>
     </junit>
   </target>

   <target name = "clean">
     <delete dir = "${plugins}"/>
     <delete dir = "${classes}"/>
   </target>

</project>
